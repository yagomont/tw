#!/bin/bash
# Configuration file for Toasted Watchdog
# All rights reserved to Fully Toasted
# Is also a script itself!

# Change the pack identity. eg: FTB Revelations, revel, revel
pack="FTB Revelations"
packid="revel"
packidAppend="revel"
# Only change this if you know what you are doing.
cfgfile=$execdir"/watchdog.cfg"
logfile=$execdir"/watchdog.log"
lock=$execdir"/wlock" 
modfile=$execdir"/watchdog.mod"

# Default value for isRunning [d="yes"]
<<<<<<< HEAD
# Might affect simpleCrashLoopDetection's behavior.
  isRunning="yes"

# Default broadcast message [d="I am Toast!"]
  msg="You shouldn't be able to see this message. Please contact an administrator."

# Force broadcasting in interactive mode [d="false"]
# Setting this might break some things.
 # daemonized="false"

# Use new threaded code if true [d="false"]
# Is usually much faster than the old code.
# Option is here if you need a watchdog with less resource consumption.
 aggressiveThreading="true"
=======
# Setting this to no will tell asyncCrashLoopDetection to run at the watchdog startup.
  isRunning="yes"

# Default broadcast message [d="I am Toast!"]
# Doesn't do anything (probably)
 # msg="You shouldn't be able to see this message. Please contact an administrator."

# Force broadcasting in interactive mode [d=false]
# If set to false, things will get outputted to the terminal instead. Good for testing.
 # daemonized="false"

if [ "$isModLoadingPhase" == "true" ]; then
        # Define which modules to load here
        # format -> modulename for sequential execution
        # format -> modulename & for parallel execution
        simpleCrashLoopDetection &
        serverRestartScheduler &
	# DO NOT USE ANTIVANISH OUTSIDE OF ENIGMATICA
        #  antiVanish &


>>>>>>> 8245047c799e07db23638a89b9ec185e78ac52fb

# Threading settings, divide 1 by the number of threads to get threadTickTime and threadSpacing
# threadOnTickWait is unused for now due to possible desynchronization with waiting on a watchdog thread
# numThreads is the number of normal threads. Since there is always one master thread, numThreads=3 will spawn four.
# Having a lot of threads will reduce the response time but might slow things down at extremes.
 threadTickTime="0.33"
 masterThreadTickTime="3.33"
 threadSpacing="0.33"
 threadOnTickWait="0.0"
 numThreads="2"

# How long antiVanish will sleep for before checking for a login
 vanishSleepTime="5"

# How long sleepRestartScheduler will sleep for before checking for scheduled jobs
 restartSleepTime="900"

# Force modules to never load (or always load).
# isModLoadingPhase="false"

# Cache all new player logins to a file
 doCacheLogins="true"

# Attempt to fix FTB Utilities
 doChunkUnloading="false"
 
# Please do NOT enable simpleCrashLoopDetection with aggressiveThreading!!!
# it will invoke asyncCrashLoopDetection itself.
# Threads here are spawned as children of the main script, then disowned

if [ "$isModLoadingPhase" == "true" ]; then
        # Define which modules to load here
        # format -> modulename ; for sequential execution
        # format -> modulename & for parallel execution
        serverRestartScheduler &
        antiVanish &
fi


